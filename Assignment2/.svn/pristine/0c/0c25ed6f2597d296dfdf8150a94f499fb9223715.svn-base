package driver;

import java.util.List;
import java.util.ArrayList;
import driver.FileSystem;

public class DirectoryMake {
  /**
   * Takes an ArrayList of all directories' and modifies the FileSystem with respect to the desired
   * paths (relative, full or none) by creating directories at the specified path.
   * 
   * @param dirs: Takes a String, with each index containing a path and the directory that needs to
   *        be made at the end.
   * @return None
   * 
   */
  public static void mkdir(List<String> dirs) {
    // Loop through each given path until every path has an added directory
    for (String path : dirs) {
      // Condition for if parent is not the root
      if (path.indexOf("/") != -1) {
        // Split path into directories
        String[] path_dirs = path.split("/");
        // Condition for whenever parent_dir is root
        if (path_dirs.length == 0) {
          FileSystem.getRoot().addDirectory(new Directory(path.substring(1)));
        } else {
          // Get new directory name and parent directory along with its path
          String name = path_dirs[path_dirs.length - 1];
          String prnt_path = path.substring(0, path.length() - 
                                            name.length() - 1);
          Directory prnt_dir = FileSystem.path_to_dir(prnt_path);
          // TODO Validate if parent directory exists in the given path
          if (prnt_dir != null) {
            prnt_dir.addDirectory(new Directory(name));
          }
        }
      }
      // Condition for when parent directory is the current directory
      else {
        // Add to current directory
        FileSystem.get_cur_dir().addDirectory(new Directory(path));
      }
    }
  }
}
