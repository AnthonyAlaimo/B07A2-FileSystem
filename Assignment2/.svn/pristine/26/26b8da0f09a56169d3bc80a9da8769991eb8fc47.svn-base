package driver;

import driver.FileSystem;

/**
 * Command in Jshell that makes new Directories in the FileSystem
 * 
 * @author Muizz Uddin Ahmed
 * @version 1.0
 */
public class DirectoryMake extends Command {
  /**
   * Stores the documentation for the given command mkdir
   */
  private String documentation = "\n Description: \n\n Creates a directory(s)"
      + " with the given name(s), they can be either a relative or full path.";

  /**
   * Takes an ArrayList of all directories' and modifies the FileSystem with respect to the desired
   * paths (relative, full or none) by creating directories at the specified path.
   * 
   * @param dirs: Takes a String, with each index containing a path and the directory that needs to
   *        be made at the end.
   * @return None
   * 
   */
  public static void mkdir(String path) {
    // get name of the new directory and check if it is a valid name
    String name = path.substring(path.lastIndexOf("/") + 1);
    Object prnt_dir = null;
    if (Validator.valid_name_or_path(name, "[^A-Za-z0-9\\-\\_]")) {
      // Condition for if path traverses multiple directories
      if (path.indexOf("/") != -1) {
        // Condition for whenever parent_dir is root
        if (path.lastIndexOf("/") == 0) {
          prnt_dir = FileSystem.getRoot();
        } else {
          // Get parent directory along with its path
          String prnt_path = path.substring(0, path.lastIndexOf("/"));
          prnt_dir = FileSystem.pathToDirorFile(prnt_path);
        }
      }
      // Condition for when parent directory is the current directory
      else {
        // Add to current directory
        prnt_dir = FileSystem.get_cur_dir();
      }
      // Check if the parent_dir given is a Directory
      if (prnt_dir instanceof Directory) {
        // Make sure Directory doesnt exist or else return an exception.
        if (Validator.valid_dir((Directory) prnt_dir, name)) {
          ExceptionHandler.DirNameExistsException(name);
        } else {
          ((Directory) prnt_dir).addDirectory(new Directory(name));
        }
      }
    }
  }


  /**
   * Runs the command of the mkdir from Jshell by looping through each path and adds there
   * corresponding directory by using mkdir method.
   * 
   * @param Input: Takes in the input after the command input
   */
  @Override
  public void run_command(String Input) {
    // Remove whitespace from both front and back then split into diff paths
    String[] paths = Input.trim().split(" ");
    // loop through each path until all paths have been addressed
    for (String path : paths) {
      mkdir(path);
    }
  }

  @Override
  public void print_documentation() {
    // TODO Auto-generated method stub
    System.out.println(documentation);
  }
}
