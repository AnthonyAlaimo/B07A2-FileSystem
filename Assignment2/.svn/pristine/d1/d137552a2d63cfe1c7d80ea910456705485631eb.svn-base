package driver;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Validator {
  public static String[] inputList;
  static List<String> inputArrayList;


  public Validator(String input) {
    inputList = input.split(" ");
    inputArrayList = Arrays.asList(inputList);
    List<String> mkdirList = inputArrayList.subList(1, inputArrayList.size());
    //System.out.println(inputList[0]);
    
    if (inputList[0].equals("pwd"))
    {
      DirectoryPath.printCurrentPath();
    }
    else if (inputList[0].equals("mkdir"))
    {
      DirectoryMake.mkdir(mkdirList);
    }
    else if (inputList[0].equals("cd"))
    {
      DirectoryChange.changeDirectory(inputList[1]);
    }
    else if (inputList[0].equals("ls"))
    {
      if (inputArrayList.size() == 1) {
        DirectoryList.ls("");
      }else {
        DirectoryList.ls(inputList[1]);
      }
      
    }
    else if (inputList[0].equals("pushd"))
    {
     FileSystem.path_to_dir(inputList[1]);
     DirectoryPush.pushDirectory(FileSystem.get_cur_dir(),FileSystem.path_to_dir(inputList[1]));
    }
    else if (inputList[0].equals("popd"))
    {
      DirectoryStack.pop();
    }
    else if (inputList[0].equals("history"))
    {
      if (inputArrayList.size() == 1) {
        CommandHistory.view_history();
      }else {
        CommandHistory.view_history(Integer.parseInt(inputList[1]));
      }
      
    }
    else if (inputList[0].equals("cat"))
    {
     ViewFile.cat(inputList[1]);
      
    }
    else if (inputList[0].equals("echo"))
    {
      if(inputArrayList.size() == 2) {
       EchoFile.echo(inputList[1]);
     } else if (input.contains(">>")){
       EchoAppend.echo2(inputList[1], inputList[3]);
     } else {
       EchoFile.echo(inputList[1], inputList[3]);
     }
    }
    else if (inputList[0].equals("man"))
    {
      
    }
  }
  
  public static boolean valid_file(Directory dir_with_file, String file_name) {
    // Get all files in the given directory
    List<File> dir_files = dir_with_file.getAllFiles();
    // find if the file name is in the list. if not found, file doesn't exist
    for (File file : dir_files) {
      if (file.getName().equals(file_name)) {
        return true;
      }
    }
    // Return an Error Message
    return false;
  }
  
  
  public static boolean valid_dir(Directory parent_dir, String dir_name) {
    // Get all sub directories in the parent
    List<Directory> subDirs = parent_dir.getSubDirectories();
    // find if the dir name exists in the list. if not, dir doesn't exist.
    for (Directory dir : subDirs) {
      if (dir.getName().equals(dir_name)) {
        return true;
      }
    }
    return false;
  }
}
